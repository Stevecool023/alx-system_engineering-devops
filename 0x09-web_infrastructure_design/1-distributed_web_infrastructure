	WEB INFRASTRUCTURE DESIGN.

TASK 1

	Introduction:
In web infrastructure the following in the following sense:

1. **2 servers:** To provide redundancy and fault tolerance. If one server fails, the other can take over to ensure continuous operation.

2. **1 web server (Nginx):** To handle incoming HTTP requests, serve static files efficiently, and act as a reverse proxy for the application server.

3. **1 application server:** To process dynamic content, run the application code, and interact with the web server to deliver dynamic responses.

4. **1 load-balancer (HAproxy):** To evenly distribute incoming traffic across multiple application servers, ensuring optimal resource utilization and preventing overloading.

5. **1 set of application files (your code base):** The code base contains the application logic and files necessary to run the website or web application.

6. **1 database (MySQL):** To store and manage structured data, allowing the application to read, write, and retrieve information needed for user interactions and data processing.

A load balancer is configured with a distribution algorithm, such as Round Robin, Least Connections, or Weighted Round Robin.The distribution algorithm allows the load balancer to intelligently distribute incoming requests among the available servers. This ensures optimal resource utilization, prevents overloading of any single server, and improves the overall performance and reliability of the system.
Load balancer enables an Active-Active setup where multiple servers handle incoming traffic simultaneously, providing high availability and load distribution. In contrast, Active-Passive has one active server handling traffic while others act as backups, only becoming active when the primary server fails.
A Primary-Replica (Master-Slave) database cluster has a primary node that receives writes and replicates changes to read-only replica nodes for improved scalability, fault tolerance, and high availability. Benefits:
Improved read scalability due to distributing read queries across replica nodes.
Increased fault tolerance and high availability as replicas can take over if the primary fails.
Data backups can be taken from replica nodes without impacting the primary node's performance.
The difference between the Primary node and the Replica node in regard to the application lies in how they handle specific database operations. The Primary node is responsible for all write operations and maintaining data integrity, while the Replica nodes serve read-only copies of the data to handle read queries and improve read scalability. This setup helps balance the workload, improves performance, and enhances fault tolerance in the database system.

	Issues explanation:
The major SPOF in this infrastructure is having a single load balancer.
Without a firewall, there are unauthorized access risk, direct targeting by attackers, increased data breach, and DoS attack risks.Also, without HTTPS, there is data interception risk, sensitive information exposure, and vulnerability to man-in-the-middle attacks.
No monitoring causes reduced incident detection, response delay, and system performance optimization difficulties, hindering security and reliability.
